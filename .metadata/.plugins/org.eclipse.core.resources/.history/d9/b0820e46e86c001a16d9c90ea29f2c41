package com.mindtree.productservice.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import com.mindtree.productservice.entity.Product;
import com.mindtree.productservice.service.ProductService;

@Service
public class ProductKafkaServiceImpl implements ProductService {

	private Logger logger;
	private List<Product> products;
	Product foundProduct = null;
	
	

	public Product getFoundProduct() {
		return foundProduct;
	}

	public void setFoundProduct(Product foundProduct) {
		this.foundProduct = foundProduct;
	}

	public ProductKafkaServiceImpl() {
		this.logger = LoggerFactory.getLogger(ProductKafkaServiceImpl.class);
		this.products = new ArrayList<>();
	}

	@KafkaListener(topics = "products", groupId = "group_two", containerFactory = "productKafkaListenerContainerFactory")
	public void consumeProduct(Product product) {
		this.products.add(product);
		logger.debug("Added product to records, product name: " + product.getProductName());
	}

	
	public Product getProductById(int id) {
		
		products.stream().filter(product->{
			if(product.getProductId() == id) {
				foundProduct = product;
				return false;
			}
			return true;
		}).collect(Collectors.toList());
	}

}
